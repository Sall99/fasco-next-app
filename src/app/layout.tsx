import type { Metadata } from "next";
import { Volkhov, Poppins } from "next/font/google";
import localFont from "next/font/local";
import "./globals.css";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import { Toaster } from "react-hot-toast";
import { Toaster as SonnerToaster } from "sonner";
import { Header } from "@/components";
import StoreProvider from "@/store/provider";
import { SessionWrapper } from "../../libs";
import { ClientLayout } from "@/utils/client-route";

const DigitalNumbers = localFont({
  src: "./fonts/DigitalNumbers-Regular.ttf",
  variable: "--font-digital-number",
});

const volkhov = Volkhov({
  subsets: ["latin"],
  weight: ["400", "700"],
  variable: "--font-volkhov",
});

const poppins = Poppins({
  subsets: ["latin-ext"],
  weight: ["100", "200", "300", "400", "500", "600", "800", "900"],
  variable: "--font-poppins",
});

export async function generateMetadata(): Promise<Metadata> {
  const title = "Fasco - Fashion & Accessories";
  const description =
    "Premium fashion and accessories store with the latest trends and designer collections";
  const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || "https://fasco.com";

  return {
    title: {
      default: title,
      template: `%s | ${title}`,
    },
    description,
    openGraph: {
      title: {
        default: title,
        template: `%s | ${title}`,
      },
      description,
      url: baseUrl,
      siteName: title,
      images: [
        {
          url: `${baseUrl}/og-image.jpg`,
          width: 800,
          height: 600,
          alt: "Fasco Fashion Store",
        },
      ],
      locale: "en_US",
      type: "website",
    },
    twitter: {
      card: "summary_large_image",
      title: {
        default: title,
        template: `%s | ${title}`,
      },
      description,
      creator: "@fasco",
      images: [`${baseUrl}/twitter-image.jpg`],
    },
  };
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="description" content="Generated by create next app" />
        <meta property="og:title" content="Create Next App" />
        <meta
          property="og:description"
          content="Generated by create next app"
        />
        <meta property="og:url" content="https://www.example.com" />
        <meta property="og:site_name" content="Create Next App" />
        <meta
          property="og:image"
          content="https://www.example.com/og-image.jpg"
        />
        <meta property="og:locale" content="en_US" />
        <meta property="og:type" content="website" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@site_account" />
        <meta name="twitter:creator" content="@individual_account" />
        <meta name="twitter:title" content="Create Next App" />
        <meta
          name="twitter:description"
          content="Fasco - Fashion & Accessories"
        />
        <meta
          name="twitter:image"
          content="https://www.example.com/twitter-image.jpg"
        />
        <title>Fasco - Fashion & Accessories</title>
      </head>
      <body
        className={`${DigitalNumbers.variable} ${volkhov.variable} ${poppins.variable} base-layout antialiased`}
      >
        <StoreProvider>
          <SessionWrapper>
            <Header />
            <ClientLayout>
              {children}
              <Toaster />
              <SonnerToaster richColors />
            </ClientLayout>
          </SessionWrapper>
        </StoreProvider>
      </body>
    </html>
  );
}
